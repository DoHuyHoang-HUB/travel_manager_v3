/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.component;

import dao.impl.KhachHangImpl;
import model.KhachHang;
import com.huyhoang.*;
import com.huyhoang.swing.event.EventPagination;

import dao.KhachHang_DAO;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NGUYE
 */
public class PanelKhachHang extends javax.swing.JPanel {

    private KhachHang_DAO khachHangImpl;

    public PanelKhachHang() throws MalformedURLException, RemoteException, NotBoundException {

        initComponents();

        khachHangImpl = (KhachHang_DAO) Naming.lookup("rmi://localhost:1099/khachHang_DAO");

        setPropertiesForm();
        setSizeColumn();

        tblKhachHangHandle();

        searchHandle();

        loadDataTable(pnlPage.getCurrentIndex());
    }

    private void setPropertiesForm() {
        int txtRadius = 10;

        Color colorBtn = new Color(184, 238, 241);
        
        //set chiều cao  và font size của row header
        tblKhachHang.getTableHeader().setPreferredSize(new Dimension(getWidth(), 40));
        tblKhachHang.getTableHeader().setFont(new Font("SansSerif", Font.BOLD, 16));

        txtTimKiem.setBorderLine(true);
        txtTimKiem.setBorderRadius(txtRadius);

        cmbChonCot.addItem("Tên khách hàng");
        cmbChonCot.addItem("Mã khách hàng");
        cmbChonCot.addItem("Số điện thoại");
        cmbChonCot.addItem("Căn cước công dân");
        cmbChonCot.addItem("Email");

    }
    
    private void setSizeColumn() {
        tblKhachHang.getColumnModel().getColumn(0).setPreferredWidth(40);
        tblKhachHang.getColumnModel().getColumn(2).setPreferredWidth(40);
        tblKhachHang.getColumnModel().getColumn(4).setPreferredWidth(40);
        tblKhachHang.getColumnModel().getColumn(5).setPreferredWidth(320);
    }

    private void searchHandle() {

        txtTimKiem.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                try {
					loadPage();
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}

                loadDataTable(pnlPage.getCurrentIndex());
            }
        });

    }

    private void loadDataTable(int numPage) {
        new Thread(new Runnable() {
            @Override
            public void run() {

                String textSearch = txtTimKiem.getText().trim();
                String option = (String) cmbChonCot.getSelectedItem();

                List<KhachHang> listRow = null;
				try {
					listRow = khachHangImpl.searchKhachHangs(textSearch, option, numPage);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
                if (listRow != null) {
                    ((DefaultTableModel) tblKhachHang.getModel()).setRowCount(0);
                    listRow.forEach(i -> {
                        tblKhachHang.addRow(new KhachHang(i.getMaKhachHang(), i.getHoTen(), i.getAvatar(), i.getcCCD(), i.getSoDienThoai(), i.getEmail(), i.getDiaChi(), i.getMatKhau()).convertToRowTable());
                    });
                    tblKhachHang.repaint();
                    tblKhachHang.revalidate();
                }
            }

        }).start();

    }

    private void loadPage() throws RemoteException {
        String textSearch = txtTimKiem.getText().trim();
        String option = (String) cmbChonCot.getSelectedItem();

        int row = khachHangImpl.getSoLuongKhachHang(textSearch, option);

        int x = row % 20 == 0 ? row / 20 : (row / 20) + 1;
        if (x == 0) {
            x = 1;
        }

        pnlPage.init(x);
    }

    private void tblKhachHangHandle() throws RemoteException {
        pnlPage.addEventPagination(new EventPagination() {
            @Override
            public void onClick(int pageClick) {
                loadDataTable(pageClick);
            }
        });

        loadPage();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTop = new com.huyhoang.swing.panel.PanelShadow();
        txtTimKiem = new com.huyhoang.swing.textfield.MyTextField();
        cmbChonCot = new javax.swing.JComboBox<>();
        pnlCenter = new com.huyhoang.swing.panel.PanelShadow();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKhachHang = new gui.table2.MyTable();
        pnlPage = new gui.table2.PanelPage();

        setBackground(new java.awt.Color(255, 255, 255));

        pnlTop.setBackground(new java.awt.Color(255, 255, 255));

        txtTimKiem.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        cmbChonCot.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        cmbChonCot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbChonCotActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTopLayout = new javax.swing.GroupLayout(pnlTop);
        pnlTop.setLayout(pnlTopLayout);
        pnlTopLayout.setHorizontalGroup(
            pnlTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTopLayout.createSequentialGroup()
                .addGap(267, 267, 267)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(cmbChonCot, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(335, 335, 335))
        );
        pnlTopLayout.setVerticalGroup(
            pnlTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTopLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(pnlTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbChonCot, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pnlCenter.setBackground(new java.awt.Color(255, 255, 255));

        tblKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã khách hàng", "Tên khách hàng", "Số điện thoại", "Email", "Căn cước công dân", "Địa chỉ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblKhachHang.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        tblKhachHang.setRowHeight(40);
        jScrollPane1.setViewportView(tblKhachHang);

        pnlPage.setOpaque(false);

        javax.swing.GroupLayout pnlCenterLayout = new javax.swing.GroupLayout(pnlCenter);
        pnlCenter.setLayout(pnlCenterLayout);
        pnlCenterLayout.setHorizontalGroup(
            pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCenterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCenterLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(pnlPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlCenterLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1086, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        pnlCenterLayout.setVerticalGroup(
            pnlCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCenterLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlCenter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCenter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbChonCotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbChonCotActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbChonCotActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbChonCot;
    private javax.swing.JScrollPane jScrollPane1;
    private com.huyhoang.swing.panel.PanelShadow pnlCenter;
    private gui.table2.PanelPage pnlPage;
    private com.huyhoang.swing.panel.PanelShadow pnlTop;
    private gui.table2.MyTable tblKhachHang;
    private com.huyhoang.swing.textfield.MyTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
